{"name": "test_sample_test_case[Requests/Payload/Json/Sample_Payload.json]", "status": "broken", "statusDetails": {"message": "FileNotFoundError: [WinError 3] The system cannot find the path specified: ''", "trace": "self = <TestCases.testsuites.test_sample.TestSample object at 0x000002847BAE59D0>\napiTestData = {'BaseUrl': {'DeleteBaseUrl': '', 'GetBaseUrl': 'https://reqres.in', 'PostBaseUrl': '', 'PutBaseUrl': ''}, 'Credential...t': '/api/users/{user_id}', 'EndPointName': 'testget', 'EnvironmentName': 'Dev', 'ResponseCode': '[200]', ...}}}], ...}\nreadPayLoadJsonWithUUID = {}, configLogger = <RootLogger root (INFO)>\n\n    @pytest.mark.parametrize('readPayLoadJsonWithUUID', [\"Requests/Payload/Json/Sample_Payload.json\"], indirect=['readPayLoadJsonWithUUID'])\n    def test_sample_test_case(self,apiTestData, readPayLoadJsonWithUUID, configLogger):\n        # put_user(apiTestData=apiTestData, endpointkey=\"Patient And Appointment\", configLogger=configLogger, readPayLoadJson=readPayLoadJsonWithUUID, headers=ast.literal_eval(apiTestData['Headers']['ContentTypeWithJsonBlob']))\n        # print(\"\\n ========================================================================================================================================================== \\n\")\n        # time.sleep(10)\n>       get_user(apiTestData=apiTestData, endpointkey=\"testget\",configLogger=configLogger)\n\nTestCases\\testsuites\\test_sample.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nRequests\\methods\\GetRequests\\getcommons\\GET_CommonActions.py:29: in get_user\n    writeResponseBodyInJson(filename, jsonData=json.loads(reponseBody))\nCommonClass\\api_utils\\CommonApiActions.py:28: in writeResponseBodyInJson\n    os.makedirs(os.path.dirname(file_name), exist_ok=True)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nname = '', mode = 511, exist_ok = True\n\n    def makedirs(name, mode=0o777, exist_ok=False):\n        \"\"\"makedirs(name [, mode=0o777][, exist_ok=False])\n    \n        Super-mkdir; create a leaf directory and all intermediate ones.  Works like\n        mkdir, except that any intermediate path segment (not just the rightmost)\n        will be created if it does not exist. If the target directory already\n        exists, raise an OSError if exist_ok is False. Otherwise no exception is\n        raised.  This is recursive.\n    \n        \"\"\"\n        head, tail = path.split(name)\n        if not tail:\n            head, tail = path.split(head)\n        if head and tail and not path.exists(head):\n            try:\n                makedirs(head, exist_ok=exist_ok)\n            except FileExistsError:\n                # Defeats race condition when another thread created the path\n                pass\n            cdir = curdir\n            if isinstance(tail, bytes):\n                cdir = bytes(curdir, 'ASCII')\n            if tail == cdir:           # xxx/newdir/. exists if xxx/newdir exists\n                return\n        try:\n>           mkdir(name, mode)\nE           FileNotFoundError: [WinError 3] The system cannot find the path specified: ''\n\nC:\\Users\\Darvin\\AppData\\Local\\Programs\\Python\\Python39\\lib\\os.py:225: FileNotFoundError"}, "attachments": [{"name": "stdout", "source": "3a4424b8-aefd-4c6b-9559-2633c062a79f-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "readPayLoadJsonWithUUID", "value": "'Requests/Payload/Json/Sample_Payload.json'"}], "start": 1673194584264, "stop": 1673194584676, "uuid": "33144fd7-286c-4f4f-85a6-aad9f735cd45", "historyId": "15f3caf09d308017c239bcc062c0d633", "testCaseId": "606f971d2b9dc0d3c9639071702cc2c9", "fullName": "TestCases.testsuites.test_sample.TestSample#test_sample_test_case", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('env_setup')"}, {"name": "parentSuite", "value": "TestCases.testsuites"}, {"name": "suite", "value": "test_sample"}, {"name": "subSuite", "value": "TestSample"}, {"name": "host", "value": "DESKTOP-A8SJNO5"}, {"name": "thread", "value": "74164-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCases.testsuites.test_sample"}]}