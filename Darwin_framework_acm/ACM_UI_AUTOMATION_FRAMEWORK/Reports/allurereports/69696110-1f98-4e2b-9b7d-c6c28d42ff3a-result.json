{"name": "test_sample_test_case[Requests/Payload/Json/Sample_Payload.json]", "status": "broken", "statusDetails": {"message": "TypeError: can only concatenate str (not \"NoneType\") to str", "trace": "self = <TestCases.testsuites.test_sample.TestSample object at 0x00000245CD9F1730>\napiTestData = {'BaseUrl': {'DeleteBaseUrl': '', 'GetBaseUrl': 'https://reqres.in', 'PostBaseUrl': '', 'PutBaseUrl': ''}, 'Credential...t': '/api/users/{user_id}', 'EndPointName': 'testget', 'EnvironmentName': 'Dev', 'ResponseCode': '[200]', ...}}}], ...}\nreadPayLoadJsonWithUUID = {}, configLogger = <RootLogger root (INFO)>\n\n    @pytest.mark.parametrize('readPayLoadJsonWithUUID', [\"Requests/Payload/Json/Sample_Payload.json\"], indirect=['readPayLoadJsonWithUUID'])\n    def test_sample_test_case(self,apiTestData, readPayLoadJsonWithUUID, configLogger):\n        # put_user(apiTestData=apiTestData, endpointkey=\"Patient And Appointment\", configLogger=configLogger, readPayLoadJson=readPayLoadJsonWithUUID, headers=ast.literal_eval(apiTestData['Headers']['ContentTypeWithJsonBlob']))\n        # print(\"\\n ========================================================================================================================================================== \\n\")\n        # time.sleep(10)\n>       get_user(apiTestData=apiTestData, endpointkey=\"testget\",configLogger=configLogger)\n\nTestCases\\testsuites\\test_sample.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nRequests\\methods\\GetRequests\\getcommons\\GET_CommonActions.py:31: in get_user\n    validations.BasicValidations('first name', responseBodyDict.get('first_name'), 'Janet')\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <CommonClass.api_utils.RequestValidations.Validations object at 0x00000245CD8A6040>, keyName = 'first name', listValue = ['Janet']\nenvValue = 'Janet', logger = None, contains = None\n\n    def BasicValidations(self,keyName, listValue, envValue, logger=None, contains=None):\n        for stringValue in listValue:\n            if contains is True:\n                if envValue in stringValue:\n                    print(\"         \"+keyName + ' in Acknowledgement is same as the '+keyName +\" Generated \"+\"(\"+os.getenv(envValue)+\").\"+\" -PASS\")\n    \n            if envValue == stringValue:\n>               print(\"         \"+keyName + ' in Acknowledgement is same as the '+keyName+\" Generated \"+\"(\"+os.getenv(envValue)+\").\"+\" -PASS\")\nE               TypeError: can only concatenate str (not \"NoneType\") to str\n\nCommonClass\\api_utils\\RequestValidations.py:52: TypeError"}, "attachments": [{"name": "stdout", "source": "9bd677e0-b577-4d48-a36e-1ecf68508b01-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "readPayLoadJsonWithUUID", "value": "'Requests/Payload/Json/Sample_Payload.json'"}], "start": 1673194611559, "stop": 1673194611928, "uuid": "b144183c-1e58-40c9-9919-080c20e6bf1e", "historyId": "15f3caf09d308017c239bcc062c0d633", "testCaseId": "606f971d2b9dc0d3c9639071702cc2c9", "fullName": "TestCases.testsuites.test_sample.TestSample#test_sample_test_case", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('env_setup')"}, {"name": "parentSuite", "value": "TestCases.testsuites"}, {"name": "suite", "value": "test_sample"}, {"name": "subSuite", "value": "TestSample"}, {"name": "host", "value": "DESKTOP-A8SJNO5"}, {"name": "thread", "value": "66124-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCases.testsuites.test_sample"}]}